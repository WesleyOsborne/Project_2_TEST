{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled2.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "authorship_tag": "ABX9TyNi2WDlJkuyDmdmACxK6Yxc",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/WesleyOsborne/Project_2_TEST/blob/main/DASH\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Pth8Mq9tjmWx",
        "outputId": "7cf507c3-3137-4a33-f33f-e2ea7c87f23d"
      },
      "source": [
        "!pip install dash\n"
      ],
      "execution_count": 32,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: dash in /usr/local/lib/python3.7/dist-packages (1.21.0)\n",
            "Requirement already satisfied: Flask>=1.0.4 in /usr/local/lib/python3.7/dist-packages (from dash) (1.1.4)\n",
            "Requirement already satisfied: dash-html-components==1.1.4 in /usr/local/lib/python3.7/dist-packages (from dash) (1.1.4)\n",
            "Requirement already satisfied: plotly in /usr/local/lib/python3.7/dist-packages (from dash) (4.4.1)\n",
            "Requirement already satisfied: dash-core-components==1.17.1 in /usr/local/lib/python3.7/dist-packages (from dash) (1.17.1)\n",
            "Requirement already satisfied: future in /usr/local/lib/python3.7/dist-packages (from dash) (0.16.0)\n",
            "Requirement already satisfied: flask-compress in /usr/local/lib/python3.7/dist-packages (from dash) (1.10.1)\n",
            "Requirement already satisfied: dash-table==4.12.0 in /usr/local/lib/python3.7/dist-packages (from dash) (4.12.0)\n",
            "Requirement already satisfied: Werkzeug<2.0,>=0.15 in /usr/local/lib/python3.7/dist-packages (from Flask>=1.0.4->dash) (1.0.1)\n",
            "Requirement already satisfied: Jinja2<3.0,>=2.10.1 in /usr/local/lib/python3.7/dist-packages (from Flask>=1.0.4->dash) (2.11.3)\n",
            "Requirement already satisfied: itsdangerous<2.0,>=0.24 in /usr/local/lib/python3.7/dist-packages (from Flask>=1.0.4->dash) (1.1.0)\n",
            "Requirement already satisfied: click<8.0,>=5.1 in /usr/local/lib/python3.7/dist-packages (from Flask>=1.0.4->dash) (7.1.2)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2<3.0,>=2.10.1->Flask>=1.0.4->dash) (2.0.1)\n",
            "Requirement already satisfied: brotli in /usr/local/lib/python3.7/dist-packages (from flask-compress->dash) (1.0.9)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from plotly->dash) (1.15.0)\n",
            "Requirement already satisfied: retrying>=1.3.3 in /usr/local/lib/python3.7/dist-packages (from plotly->dash) (1.3.3)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Q87dcN0ANNL2",
        "outputId": "fbde4761-9572-439d-9e87-68a59ecd511a"
      },
      "source": [
        "!pip install hvplot\n"
      ],
      "execution_count": 33,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Requirement already satisfied: hvplot in /usr/local/lib/python3.7/dist-packages (0.7.3)\n",
            "Requirement already satisfied: pandas in /usr/local/lib/python3.7/dist-packages (from hvplot) (1.1.5)\n",
            "Requirement already satisfied: colorcet>=2 in /usr/local/lib/python3.7/dist-packages (from hvplot) (2.0.6)\n",
            "Requirement already satisfied: numpy>=1.15 in /usr/local/lib/python3.7/dist-packages (from hvplot) (1.19.5)\n",
            "Requirement already satisfied: bokeh>=1.0.0 in /usr/local/lib/python3.7/dist-packages (from hvplot) (2.3.3)\n",
            "Requirement already satisfied: holoviews>=1.11.0 in /usr/local/lib/python3.7/dist-packages (from hvplot) (1.14.5)\n",
            "Requirement already satisfied: packaging>=16.8 in /usr/local/lib/python3.7/dist-packages (from bokeh>=1.0.0->hvplot) (21.0)\n",
            "Requirement already satisfied: pillow>=7.1.0 in /usr/local/lib/python3.7/dist-packages (from bokeh>=1.0.0->hvplot) (7.1.2)\n",
            "Requirement already satisfied: Jinja2>=2.9 in /usr/local/lib/python3.7/dist-packages (from bokeh>=1.0.0->hvplot) (2.11.3)\n",
            "Requirement already satisfied: typing-extensions>=3.7.4 in /usr/local/lib/python3.7/dist-packages (from bokeh>=1.0.0->hvplot) (3.7.4.3)\n",
            "Requirement already satisfied: PyYAML>=3.10 in /usr/local/lib/python3.7/dist-packages (from bokeh>=1.0.0->hvplot) (3.13)\n",
            "Requirement already satisfied: python-dateutil>=2.1 in /usr/local/lib/python3.7/dist-packages (from bokeh>=1.0.0->hvplot) (2.8.2)\n",
            "Requirement already satisfied: tornado>=5.1 in /usr/local/lib/python3.7/dist-packages (from bokeh>=1.0.0->hvplot) (5.1.1)\n",
            "Requirement already satisfied: param>=1.7.0 in /usr/local/lib/python3.7/dist-packages (from colorcet>=2->hvplot) (1.11.1)\n",
            "Requirement already satisfied: pyct>=0.4.4 in /usr/local/lib/python3.7/dist-packages (from colorcet>=2->hvplot) (0.4.8)\n",
            "Requirement already satisfied: panel>=0.8.0 in /usr/local/lib/python3.7/dist-packages (from holoviews>=1.11.0->hvplot) (0.12.1)\n",
            "Requirement already satisfied: pyviz-comms>=0.7.4 in /usr/local/lib/python3.7/dist-packages (from holoviews>=1.11.0->hvplot) (2.1.0)\n",
            "Requirement already satisfied: MarkupSafe>=0.23 in /usr/local/lib/python3.7/dist-packages (from Jinja2>=2.9->bokeh>=1.0.0->hvplot) (2.0.1)\n",
            "Requirement already satisfied: pyparsing>=2.0.2 in /usr/local/lib/python3.7/dist-packages (from packaging>=16.8->bokeh>=1.0.0->hvplot) (2.4.7)\n",
            "Requirement already satisfied: pytz>=2017.2 in /usr/local/lib/python3.7/dist-packages (from pandas->hvplot) (2018.9)\n",
            "Requirement already satisfied: requests in /usr/local/lib/python3.7/dist-packages (from panel>=0.8.0->holoviews>=1.11.0->hvplot) (2.23.0)\n",
            "Requirement already satisfied: tqdm>=4.48.0 in /usr/local/lib/python3.7/dist-packages (from panel>=0.8.0->holoviews>=1.11.0->hvplot) (4.62.0)\n",
            "Requirement already satisfied: bleach in /usr/local/lib/python3.7/dist-packages (from panel>=0.8.0->holoviews>=1.11.0->hvplot) (4.0.0)\n",
            "Requirement already satisfied: markdown in /usr/local/lib/python3.7/dist-packages (from panel>=0.8.0->holoviews>=1.11.0->hvplot) (3.3.4)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.1->bokeh>=1.0.0->hvplot) (1.15.0)\n",
            "Requirement already satisfied: webencodings in /usr/local/lib/python3.7/dist-packages (from bleach->panel>=0.8.0->holoviews>=1.11.0->hvplot) (0.5.1)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from markdown->panel>=0.8.0->holoviews>=1.11.0->hvplot) (4.6.4)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->markdown->panel>=0.8.0->holoviews>=1.11.0->hvplot) (3.5.0)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests->panel>=0.8.0->holoviews>=1.11.0->hvplot) (2.10)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests->panel>=0.8.0->holoviews>=1.11.0->hvplot) (3.0.4)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests->panel>=0.8.0->holoviews>=1.11.0->hvplot) (1.24.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests->panel>=0.8.0->holoviews>=1.11.0->hvplot) (2021.5.30)\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ls4BPuaVjoGx",
        "outputId": "d66014ce-3a85-447c-fb34-229de5497528"
      },
      "source": [
        "import dash\n",
        "import urllib.request\n",
        "import ssl\n",
        "import json\n",
        "import time\n",
        "import tweepy\n",
        "import pandas as pd\n",
        "# Initial imports\n",
        "import os\n",
        "import nltk as nltk\n",
        "nltk.download('vader_lexicon')\n",
        "from nltk.sentiment.vader import SentimentIntensityAnalyzer\n",
        "analyzer = SentimentIntensityAnalyzer()\n",
        "import hvplot.pandas\n",
        "%matplotlib inline\n",
        "import urllib.request\n",
        "import ssl\n",
        "import json\n",
        "import time\n",
        "import panel as pn\n",
        "import plotly.express as px\n",
        "from panel.interact import interact\n",
        "from panel import widgets\n",
        "pn.extension('plotly')\n",
        "\n",
        "import plotly.graph_objects as go\n",
        "\n",
        "import numpy as np\n",
        "import pandas as pd\n",
        "from pathlib import Path\n",
        "\n",
        "import os\n",
        "#import alpaca_trade_api as tradeapi\n",
        "import json\n",
        "\n",
        "import requests\n",
        "import datetime as dt\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "%matplotlib inline\n",
        "\n",
        "#import dash\n",
        "import plotly.express as px"
      ],
      "execution_count": 34,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "WARNING:param.panel_extension: A HoloViz extension was loaded previously. This means the extension is already initialized and the following Panel extensions could not be properly loaded: ['plotly']. If you are loading custom extensions with pn.extension(...) ensure that this is called before any other HoloViz extension such as hvPlot or HoloViews.\n"
          ],
          "name": "stderr"
        },
        {
          "output_type": "stream",
          "text": [
            "[nltk_data] Downloading package vader_lexicon to /root/nltk_data...\n",
            "[nltk_data]   Package vader_lexicon is already up-to-date!\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "kQhrt7BPj1I7"
      },
      "source": [
        "api_key=\"0ke6qtah41v2jst80jkwnd\""
      ],
      "execution_count": 35,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "vyb66jAfMrR7"
      },
      "source": [
        "ssl._create_default_https_context = ssl._create_unverified_context"
      ],
      "execution_count": 36,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "7-WL2tdaMtwn"
      },
      "source": [
        "# Add Crypto Coins\n",
        "coin_list = [\n",
        "      \"SAFEMOON\",\n",
        "    \"MATIC\",\n",
        "    \"LTC\",\n",
        "    \"UNI\",\n",
        "    \"SOL\",\n",
        "    \"DOGE\",\n",
        "    \"XRP\",\n",
        "    \"BTC\",\n",
        "    \"ETH\",\n",
        "    \"ADA\",\n",
        "    \"BNB\",\n",
        "    \"AXS\",\n",
        "    \"CAKE\",\n",
        "    \"DOT\",\n",
        "    \"LINK\"\n",
        "]\n",
        "coins = ','.join(coin_list)"
      ],
      "execution_count": 37,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "BcOOI0kAMv30"
      },
      "source": [
        "# Map out what you want\n",
        "map = [\n",
        "    {\"name\":\"\"},\n",
        "    {\"symbol\": \"\"},\n",
        "    {\"price\": \" Price: \"},\n",
        "    {\"percent_change_24h\": \" - 24 Hour Percent Change: \"},\n",
        "    {\"market_cap\": \" Market Cap: \"},\n",
        "    {\"volume_24h\": \" 24 Hour Volume: \"},\n",
        "    {\"url_shares\": \" URL Shares: \"},\n",
        "    #{\"reddit_posts\": \" Reddit Posts: \"},\n",
        "    #{\"reddit_comment\" : \"Reddit Comments\"},\n",
        "    {\"tweets\": \" Tweets: \"},\n",
        "    #{\"galaxy_score\": \" Galaxy Score: \"},\n",
        "    {\"volatility\": \" Volatility: \"},\n",
        "    {\"social_volume\": \" Social Volume: \"},\n",
        "    #{\"news\": \" News: \"},\n",
        "    {\"close\": \" Close: \"},\n",
        "    {'time': ' Time:'},\n",
        "    {\"tweet_sentiment1\": \"Very Bearish Sentiment\"},\n",
        "    {\"tweet_sentiment2\": \" Bearish Sentiment\"},\n",
        "    #{\"tweet_sentiment2_tweet_sentiment\": \"Negative Sentiment\"},\n",
        "    {\"tweet_sentiment3\": \" Neutral Sentiment\"},\n",
        "    {\"tweet_sentiment4\": \" Bullish Sentiment\"},\n",
        "    {\"tweet_sentiment5\": \" Very Bullish Sentiment\"},\n",
        "    #{\"tweet_sentiment4_sentiment5\": \" Positive Sentiment\"},\n",
        "    {\"tweet_sentiment_impact1\": \"  Very Bearish Sentiment Impact\"},\n",
        "    {\"average_sentiment\": \"Average Sentiment\"}\n",
        "    \n",
        "]"
      ],
      "execution_count": 38,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Oh1RyD-6Mzom"
      },
      "source": [
        "def final_render(asset_coin, value, key, asset):\n",
        "    if key == 'symbol':\n",
        "        asset_coin += \" (\" + asset[key] + \")\"\n",
        "    elif key == 'percent_change_24h':\n",
        "        asset_coin += value + str(asset[key]) + \"%\"\n",
        "    else:\n",
        "        asset_coin += value + str(asset[key])\n",
        "    return asset_coin\n"
      ],
      "execution_count": 39,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "HnoLfuf1M2kb"
      },
      "source": [
        "# Define Variables\n",
        "fields = [list(key.keys())[0] for key in map]\n",
        "coins_df = pd.DataFrame(columns=fields)\n"
      ],
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "IxudfpriM4dq",
        "outputId": "a66265ef-c407-4b58-ba11-d48f43a07683"
      },
      "source": [
        "# Iterates over each of the fields from Lunar Crush, gets the value from Lunar Crush and renders it with the field name\n",
        "def main():\n",
        "\n",
        "    url = \"https://api.lunarcrush.com/v2?data=assets&key=\" + api_key + \"&symbol=\" + coins\n",
        "    assets = json.loads(urllib.request.urlopen(url).read())\n",
        "\n",
        "    for asset in assets['data']:\n",
        "        asset_coin = \"\"\n",
        "        for field in map:\n",
        "            key = list(field.keys())[0]\n",
        "            value = list(field.values())[0]\n",
        "            asset_coin = final_render(asset_coin, value, key, asset)\n",
        "        print(asset_coin)\n",
        "        print(len(asset_coin))\n",
        "        \n",
        "        return assets\n",
        "        \n",
        "def create_coins_df(assets):\n",
        "    global coins_df\n",
        "    \n",
        "    for n in range(len(coin_list)):\n",
        "        data = assets['data'][n]\n",
        "        required_data = [{key: data[key] for key in fields}]\n",
        "        \n",
        "        coins_df = coins_df.append(required_data, ignore_index = True)\n",
        "        \n",
        "        coins_df['time'] = pd.to_datetime(coins_df['time'], unit='s', errors='coerce')\n",
        "        \n",
        "    return coins_df\n",
        "\n",
        "Tab = create_coins_df(main()).sort_values([\"market_cap\"], ascending=False)"
      ],
      "execution_count": 41,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Cardano (ADA) Price: 2.83136027 - 24 Hour Percent Change: -0.55% Market Cap: 90791504408 24 Hour Volume: 7030001809.42 URL Shares: 452 Tweets: 1939 Volatility: 0.04984367 Social Volume: 2091 Close: 2.83136027 Time:1630162800Very Bearish Sentiment10 Bearish Sentiment331 Neutral Sentiment117 Bullish Sentiment1365 Very Bullish Sentiment116  Very Bearish Sentiment Impact4296Average Sentiment3.6\n",
            "393\n"
          ],
          "name": "stdout"
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 568
        },
        "id": "xcurwKDAM6wb",
        "outputId": "8d375a50-1e91-4755-ba81-a25aa603983c"
      },
      "source": [
        "Tab"
      ],
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>name</th>\n",
              "      <th>symbol</th>\n",
              "      <th>price</th>\n",
              "      <th>percent_change_24h</th>\n",
              "      <th>market_cap</th>\n",
              "      <th>volume_24h</th>\n",
              "      <th>url_shares</th>\n",
              "      <th>tweets</th>\n",
              "      <th>volatility</th>\n",
              "      <th>social_volume</th>\n",
              "      <th>close</th>\n",
              "      <th>time</th>\n",
              "      <th>tweet_sentiment1</th>\n",
              "      <th>tweet_sentiment2</th>\n",
              "      <th>tweet_sentiment3</th>\n",
              "      <th>tweet_sentiment4</th>\n",
              "      <th>tweet_sentiment5</th>\n",
              "      <th>tweet_sentiment_impact1</th>\n",
              "      <th>average_sentiment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Bitcoin</td>\n",
              "      <td>BTC</td>\n",
              "      <td>48791.185124</td>\n",
              "      <td>1.23</td>\n",
              "      <td>917269986707</td>\n",
              "      <td>3.598213e+10</td>\n",
              "      <td>2164</td>\n",
              "      <td>12344</td>\n",
              "      <td>0.016899</td>\n",
              "      <td>13460</td>\n",
              "      <td>48791.185124</td>\n",
              "      <td>NaT</td>\n",
              "      <td>585</td>\n",
              "      <td>1217</td>\n",
              "      <td>1308</td>\n",
              "      <td>8036</td>\n",
              "      <td>1198</td>\n",
              "      <td>13473836</td>\n",
              "      <td>3.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>Ethereum</td>\n",
              "      <td>ETH</td>\n",
              "      <td>3257.464876</td>\n",
              "      <td>0.53</td>\n",
              "      <td>382076513253</td>\n",
              "      <td>2.198786e+10</td>\n",
              "      <td>779</td>\n",
              "      <td>3025</td>\n",
              "      <td>0.019374</td>\n",
              "      <td>3455</td>\n",
              "      <td>3257.464876</td>\n",
              "      <td>NaT</td>\n",
              "      <td>42</td>\n",
              "      <td>324</td>\n",
              "      <td>452</td>\n",
              "      <td>2033</td>\n",
              "      <td>174</td>\n",
              "      <td>158907</td>\n",
              "      <td>3.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Cardano</td>\n",
              "      <td>ADA</td>\n",
              "      <td>2.831360</td>\n",
              "      <td>-0.55</td>\n",
              "      <td>90791504408</td>\n",
              "      <td>7.030002e+09</td>\n",
              "      <td>452</td>\n",
              "      <td>1939</td>\n",
              "      <td>0.049844</td>\n",
              "      <td>2091</td>\n",
              "      <td>2.831360</td>\n",
              "      <td>NaT</td>\n",
              "      <td>10</td>\n",
              "      <td>331</td>\n",
              "      <td>117</td>\n",
              "      <td>1365</td>\n",
              "      <td>116</td>\n",
              "      <td>4296</td>\n",
              "      <td>3.6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Binance Coin</td>\n",
              "      <td>BNB</td>\n",
              "      <td>486.151739</td>\n",
              "      <td>-0.59</td>\n",
              "      <td>75126803583</td>\n",
              "      <td>2.263028e+09</td>\n",
              "      <td>81</td>\n",
              "      <td>385</td>\n",
              "      <td>0.010139</td>\n",
              "      <td>410</td>\n",
              "      <td>486.151739</td>\n",
              "      <td>NaT</td>\n",
              "      <td>6</td>\n",
              "      <td>20</td>\n",
              "      <td>49</td>\n",
              "      <td>300</td>\n",
              "      <td>10</td>\n",
              "      <td>1140</td>\n",
              "      <td>3.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>XRP</td>\n",
              "      <td>XRP</td>\n",
              "      <td>1.149025</td>\n",
              "      <td>0.45</td>\n",
              "      <td>53445315761</td>\n",
              "      <td>4.692488e+09</td>\n",
              "      <td>59</td>\n",
              "      <td>253</td>\n",
              "      <td>0.030595</td>\n",
              "      <td>270</td>\n",
              "      <td>1.149025</td>\n",
              "      <td>2021-08-28 15:00:00</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>204</td>\n",
              "      <td>20</td>\n",
              "      <td>712</td>\n",
              "      <td>3.9</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>Dogecoin</td>\n",
              "      <td>DOGE</td>\n",
              "      <td>0.285901</td>\n",
              "      <td>0.36</td>\n",
              "      <td>37467339965</td>\n",
              "      <td>2.614895e+09</td>\n",
              "      <td>727</td>\n",
              "      <td>1663</td>\n",
              "      <td>0.030921</td>\n",
              "      <td>1981</td>\n",
              "      <td>0.285901</td>\n",
              "      <td>NaT</td>\n",
              "      <td>15</td>\n",
              "      <td>160</td>\n",
              "      <td>191</td>\n",
              "      <td>1115</td>\n",
              "      <td>182</td>\n",
              "      <td>50035</td>\n",
              "      <td>3.8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>Solana</td>\n",
              "      <td>SOL</td>\n",
              "      <td>94.412650</td>\n",
              "      <td>14.40</td>\n",
              "      <td>27468903244</td>\n",
              "      <td>3.272001e+09</td>\n",
              "      <td>223</td>\n",
              "      <td>680</td>\n",
              "      <td>0.059766</td>\n",
              "      <td>743</td>\n",
              "      <td>94.412650</td>\n",
              "      <td>NaT</td>\n",
              "      <td>30</td>\n",
              "      <td>69</td>\n",
              "      <td>178</td>\n",
              "      <td>379</td>\n",
              "      <td>24</td>\n",
              "      <td>148184</td>\n",
              "      <td>3.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>Polkadot</td>\n",
              "      <td>DOT</td>\n",
              "      <td>25.791237</td>\n",
              "      <td>-0.36</td>\n",
              "      <td>26427038716</td>\n",
              "      <td>1.925618e+09</td>\n",
              "      <td>34</td>\n",
              "      <td>319</td>\n",
              "      <td>0.031138</td>\n",
              "      <td>335</td>\n",
              "      <td>25.791237</td>\n",
              "      <td>NaT</td>\n",
              "      <td>5</td>\n",
              "      <td>31</td>\n",
              "      <td>60</td>\n",
              "      <td>182</td>\n",
              "      <td>41</td>\n",
              "      <td>9877</td>\n",
              "      <td>3.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>Uniswap</td>\n",
              "      <td>UNI</td>\n",
              "      <td>27.066680</td>\n",
              "      <td>-0.59</td>\n",
              "      <td>16555589839</td>\n",
              "      <td>3.642468e+08</td>\n",
              "      <td>50</td>\n",
              "      <td>67</td>\n",
              "      <td>0.023638</td>\n",
              "      <td>76</td>\n",
              "      <td>27.066680</td>\n",
              "      <td>NaT</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>52</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "      <td>3.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>Litecoin</td>\n",
              "      <td>LTC</td>\n",
              "      <td>172.956584</td>\n",
              "      <td>-0.72</td>\n",
              "      <td>11545304154</td>\n",
              "      <td>1.761725e+09</td>\n",
              "      <td>24</td>\n",
              "      <td>110</td>\n",
              "      <td>0.015773</td>\n",
              "      <td>131</td>\n",
              "      <td>172.956584</td>\n",
              "      <td>NaT</td>\n",
              "      <td>11</td>\n",
              "      <td>14</td>\n",
              "      <td>13</td>\n",
              "      <td>60</td>\n",
              "      <td>12</td>\n",
              "      <td>14586</td>\n",
              "      <td>3.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>Chainlink</td>\n",
              "      <td>LINK</td>\n",
              "      <td>25.687095</td>\n",
              "      <td>-0.35</td>\n",
              "      <td>11533751015</td>\n",
              "      <td>1.039641e+09</td>\n",
              "      <td>20</td>\n",
              "      <td>441</td>\n",
              "      <td>0.022078</td>\n",
              "      <td>455</td>\n",
              "      <td>25.687095</td>\n",
              "      <td>NaT</td>\n",
              "      <td>4</td>\n",
              "      <td>84</td>\n",
              "      <td>117</td>\n",
              "      <td>217</td>\n",
              "      <td>19</td>\n",
              "      <td>259</td>\n",
              "      <td>3.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>Polygon</td>\n",
              "      <td>MATIC</td>\n",
              "      <td>1.460867</td>\n",
              "      <td>-1.52</td>\n",
              "      <td>9462878957</td>\n",
              "      <td>8.217194e+08</td>\n",
              "      <td>82</td>\n",
              "      <td>1152</td>\n",
              "      <td>0.031363</td>\n",
              "      <td>1182</td>\n",
              "      <td>1.460867</td>\n",
              "      <td>NaT</td>\n",
              "      <td>24</td>\n",
              "      <td>112</td>\n",
              "      <td>490</td>\n",
              "      <td>487</td>\n",
              "      <td>39</td>\n",
              "      <td>15965</td>\n",
              "      <td>3.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>PancakeSwap</td>\n",
              "      <td>CAKE</td>\n",
              "      <td>25.665380</td>\n",
              "      <td>-0.48</td>\n",
              "      <td>5524956250</td>\n",
              "      <td>2.108315e+08</td>\n",
              "      <td>1278</td>\n",
              "      <td>2973</td>\n",
              "      <td>0.018335</td>\n",
              "      <td>3559</td>\n",
              "      <td>25.665380</td>\n",
              "      <td>NaT</td>\n",
              "      <td>94</td>\n",
              "      <td>187</td>\n",
              "      <td>492</td>\n",
              "      <td>2078</td>\n",
              "      <td>122</td>\n",
              "      <td>21178</td>\n",
              "      <td>3.7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Axie Infinity</td>\n",
              "      <td>AXS</td>\n",
              "      <td>76.781849</td>\n",
              "      <td>7.01</td>\n",
              "      <td>4436846862</td>\n",
              "      <td>1.719047e+09</td>\n",
              "      <td>121</td>\n",
              "      <td>2816</td>\n",
              "      <td>0.028806</td>\n",
              "      <td>2874</td>\n",
              "      <td>76.781849</td>\n",
              "      <td>NaT</td>\n",
              "      <td>60</td>\n",
              "      <td>198</td>\n",
              "      <td>1451</td>\n",
              "      <td>899</td>\n",
              "      <td>208</td>\n",
              "      <td>22744</td>\n",
              "      <td>3.4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>SafeMoon</td>\n",
              "      <td>SAFEMOON</td>\n",
              "      <td>0.000003</td>\n",
              "      <td>-1.70</td>\n",
              "      <td>1593617429</td>\n",
              "      <td>3.400152e+07</td>\n",
              "      <td>1277</td>\n",
              "      <td>19250</td>\n",
              "      <td>0.119524</td>\n",
              "      <td>20735</td>\n",
              "      <td>0.000003</td>\n",
              "      <td>NaT</td>\n",
              "      <td>224</td>\n",
              "      <td>2519</td>\n",
              "      <td>4300</td>\n",
              "      <td>11926</td>\n",
              "      <td>281</td>\n",
              "      <td>504610</td>\n",
              "      <td>3.5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "             name    symbol  ...  tweet_sentiment_impact1  average_sentiment\n",
              "3         Bitcoin       BTC  ...                 13473836                3.7\n",
              "7        Ethereum       ETH  ...                   158907                3.7\n",
              "0         Cardano       ADA  ...                     4296                3.6\n",
              "2    Binance Coin       BNB  ...                     1140                3.7\n",
              "14            XRP       XRP  ...                      712                3.9\n",
              "5        Dogecoin      DOGE  ...                    50035                3.8\n",
              "12         Solana       SOL  ...                   148184                3.4\n",
              "6        Polkadot       DOT  ...                     9877                3.7\n",
              "13        Uniswap       UNI  ...                        0                3.7\n",
              "9        Litecoin       LTC  ...                    14586                3.4\n",
              "8       Chainlink      LINK  ...                      259                3.4\n",
              "10        Polygon     MATIC  ...                    15965                3.4\n",
              "4     PancakeSwap      CAKE  ...                    21178                3.7\n",
              "1   Axie Infinity       AXS  ...                    22744                3.4\n",
              "11       SafeMoon  SAFEMOON  ...                   504610                3.5\n",
              "\n",
              "[15 rows x 19 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 42
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 17
        },
        "id": "_rjoM-j4NBKq",
        "outputId": "33ec36e8-1fbd-42b9-f928-1daab858bfa7"
      },
      "source": [
        "Tweets_per_Hour=Tab.hvplot.bar(x=\"symbol\", y=\"tweets\", xlabel=\"Ticker\", ylabel=\"Number of Tweets/Hour\", title= \"Number of Twitter Posts about Various Cryptos in the Last Hour\")\n",
        "Tweets_per_Hour"
      ],
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "application/vnd.holoviews_exec.v0+json": "",
            "text/plain": [
              ":Bars   [symbol]   (tweets)"
            ],
            "text/html": [
              "<div id='1123'>\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "\n",
              "  <div class=\"bk-root\" id=\"b4125100-9d4f-474e-ace0-4c3c4bbd4c0d\" data-root-id=\"1123\"></div>\n",
              "</div>\n",
              "<script type=\"application/javascript\">(function(root) {\n",
              "  function embed_document(root) {\n",
              "    var docs_json = {\"8ea16ed5-d124-4a21-9ea8-216c794a7649\":{\"defs\":[{\"extends\":null,\"module\":null,\"name\":\"ReactiveHTML1\",\"overrides\":[],\"properties\":[]},{\"extends\":null,\"module\":null,\"name\":\"FlexBox1\",\"overrides\":[],\"properties\":[{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_content\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"align_items\"},{\"default\":\"row\",\"kind\":null,\"name\":\"flex_direction\"},{\"default\":\"wrap\",\"kind\":null,\"name\":\"flex_wrap\"},{\"default\":\"flex-start\",\"kind\":null,\"name\":\"justify_content\"}]},{\"extends\":null,\"module\":null,\"name\":\"TemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]},{\"extends\":null,\"module\":null,\"name\":\"MaterialTemplateActions1\",\"overrides\":[],\"properties\":[{\"default\":0,\"kind\":null,\"name\":\"open_modal\"},{\"default\":0,\"kind\":null,\"name\":\"close_modal\"}]}],\"roots\":{\"references\":[{\"attributes\":{},\"id\":\"1133\",\"type\":\"CategoricalScale\"},{\"attributes\":{\"overlay\":{\"id\":\"1149\"}},\"id\":\"1147\",\"type\":\"BoxZoomTool\"},{\"attributes\":{},\"id\":\"1169\",\"type\":\"AllLabels\"},{\"attributes\":{\"fill_color\":{\"value\":\"#30a2da\"},\"top\":{\"field\":\"tweets\"},\"width\":{\"value\":0.8},\"x\":{\"field\":\"symbol\"}},\"id\":\"1160\",\"type\":\"VBar\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.2},\"fill_color\":{\"value\":\"#30a2da\"},\"line_alpha\":{\"value\":0.2},\"top\":{\"field\":\"tweets\"},\"width\":{\"value\":0.8},\"x\":{\"field\":\"symbol\"}},\"id\":\"1162\",\"type\":\"VBar\"},{\"attributes\":{\"text\":\"Number of Twitter Posts about Various Cryptos in the Last Hour\",\"text_color\":\"black\",\"text_font_size\":\"12pt\"},\"id\":\"1129\",\"type\":\"Title\"},{\"attributes\":{\"axis_label\":\"Ticker\",\"formatter\":{\"id\":\"1167\"},\"major_label_policy\":{\"id\":\"1168\"},\"ticker\":{\"id\":\"1138\"}},\"id\":\"1137\",\"type\":\"CategoricalAxis\"},{\"attributes\":{\"callback\":null,\"renderers\":[{\"id\":\"1163\"}],\"tags\":[\"hv_created\"],\"tooltips\":[[\"symbol\",\"@{symbol}\"],[\"tweets\",\"@{tweets}\"]]},\"id\":\"1127\",\"type\":\"HoverTool\"},{\"attributes\":{},\"id\":\"1144\",\"type\":\"SaveTool\"},{\"attributes\":{},\"id\":\"1145\",\"type\":\"PanTool\"},{\"attributes\":{\"margin\":[5,5,5,5],\"name\":\"HSpacer01820\",\"sizing_mode\":\"stretch_width\"},\"id\":\"1192\",\"type\":\"Spacer\"},{\"attributes\":{\"active_multi\":null,\"tools\":[{\"id\":\"1127\"},{\"id\":\"1144\"},{\"id\":\"1145\"},{\"id\":\"1146\"},{\"id\":\"1147\"},{\"id\":\"1148\"}]},\"id\":\"1150\",\"type\":\"Toolbar\"},{\"attributes\":{},\"id\":\"1170\",\"type\":\"BasicTickFormatter\"},{\"attributes\":{},\"id\":\"1167\",\"type\":\"CategoricalTickFormatter\"},{\"attributes\":{\"end\":21168.3,\"reset_end\":21168.3,\"reset_start\":0.0,\"tags\":[[[\"tweets\",\"tweets\",null]]]},\"id\":\"1126\",\"type\":\"Range1d\"},{\"attributes\":{\"data\":{\"symbol\":[\"BTC\",\"ETH\",\"ADA\",\"BNB\",\"XRP\",\"DOGE\",\"SOL\",\"DOT\",\"UNI\",\"LTC\",\"LINK\",\"MATIC\",\"CAKE\",\"AXS\",\"SAFEMOON\"],\"tweets\":[12344,3025,1939,385,253,1663,680,319,67,110,441,1152,2973,2816,19250]},\"selected\":{\"id\":\"1158\"},\"selection_policy\":{\"id\":\"1180\"}},\"id\":\"1157\",\"type\":\"ColumnDataSource\"},{\"attributes\":{\"source\":{\"id\":\"1157\"}},\"id\":\"1164\",\"type\":\"CDSView\"},{\"attributes\":{\"fill_alpha\":{\"value\":0.1},\"fill_color\":{\"value\":\"#30a2da\"},\"line_alpha\":{\"value\":0.1},\"top\":{\"field\":\"tweets\"},\"width\":{\"value\":0.8},\"x\":{\"field\":\"symbol\"}},\"id\":\"1161\",\"type\":\"VBar\"},{\"attributes\":{},\"id\":\"1135\",\"type\":\"LinearScale\"},{\"attributes\":{\"axis_label\":\"Number of Tweets/Hour\",\"formatter\":{\"id\":\"1170\"},\"major_label_policy\":{\"id\":\"1169\"},\"ticker\":{\"id\":\"1141\"}},\"id\":\"1140\",\"type\":\"LinearAxis\"},{\"attributes\":{},\"id\":\"1141\",\"type\":\"BasicTicker\"},{\"attributes\":{},\"id\":\"1180\",\"type\":\"UnionRenderers\"},{\"attributes\":{\"factors\":[\"BTC\",\"ETH\",\"ADA\",\"BNB\",\"XRP\",\"DOGE\",\"SOL\",\"DOT\",\"UNI\",\"LTC\",\"LINK\",\"MATIC\",\"CAKE\",\"AXS\",\"SAFEMOON\"],\"tags\":[[[\"symbol\",\"symbol\",null]]]},\"id\":\"1125\",\"type\":\"FactorRange\"},{\"attributes\":{\"axis\":{\"id\":\"1140\"},\"dimension\":1,\"grid_line_color\":null,\"ticker\":null},\"id\":\"1143\",\"type\":\"Grid\"},{\"attributes\":{},\"id\":\"1146\",\"type\":\"WheelZoomTool\"},{\"attributes\":{},\"id\":\"1148\",\"type\":\"ResetTool\"},{\"attributes\":{\"bottom\":{\"value\":0},\"fill_alpha\":{\"value\":1.0},\"fill_color\":{\"value\":\"#30a2da\"},\"hatch_alpha\":{\"value\":1.0},\"hatch_color\":{\"value\":\"black\"},\"hatch_scale\":{\"value\":12.0},\"hatch_weight\":{\"value\":1.0},\"line_alpha\":{\"value\":1.0},\"line_cap\":{\"value\":\"butt\"},\"line_color\":{\"value\":\"black\"},\"line_dash\":{\"value\":[]},\"line_dash_offset\":{\"value\":0},\"line_join\":{\"value\":\"bevel\"},\"line_width\":{\"value\":1},\"top\":{\"field\":\"tweets\"},\"width\":{\"value\":0.8},\"x\":{\"field\":\"symbol\"}},\"id\":\"1165\",\"type\":\"VBar\"},{\"attributes\":{\"margin\":[5,5,5,5],\"name\":\"HSpacer01819\",\"sizing_mode\":\"stretch_width\"},\"id\":\"1124\",\"type\":\"Spacer\"},{\"attributes\":{\"data_source\":{\"id\":\"1157\"},\"glyph\":{\"id\":\"1160\"},\"hover_glyph\":null,\"muted_glyph\":{\"id\":\"1162\"},\"nonselection_glyph\":{\"id\":\"1161\"},\"selection_glyph\":{\"id\":\"1165\"},\"view\":{\"id\":\"1164\"}},\"id\":\"1163\",\"type\":\"GlyphRenderer\"},{\"attributes\":{},\"id\":\"1158\",\"type\":\"Selection\"},{\"attributes\":{},\"id\":\"1168\",\"type\":\"AllLabels\"},{\"attributes\":{\"children\":[{\"id\":\"1124\"},{\"id\":\"1128\"},{\"id\":\"1192\"}],\"margin\":[0,0,0,0],\"name\":\"Row01815\",\"tags\":[\"embedded\"]},\"id\":\"1123\",\"type\":\"Row\"},{\"attributes\":{},\"id\":\"1138\",\"type\":\"CategoricalTicker\"},{\"attributes\":{\"bottom_units\":\"screen\",\"fill_alpha\":0.5,\"fill_color\":\"lightgrey\",\"left_units\":\"screen\",\"level\":\"overlay\",\"line_alpha\":1.0,\"line_color\":\"black\",\"line_dash\":[4,4],\"line_width\":2,\"right_units\":\"screen\",\"syncable\":false,\"top_units\":\"screen\"},\"id\":\"1149\",\"type\":\"BoxAnnotation\"},{\"attributes\":{\"below\":[{\"id\":\"1137\"}],\"center\":[{\"id\":\"1139\"},{\"id\":\"1143\"}],\"height\":300,\"left\":[{\"id\":\"1140\"}],\"margin\":[5,5,5,5],\"min_border_bottom\":10,\"min_border_left\":10,\"min_border_right\":10,\"min_border_top\":10,\"renderers\":[{\"id\":\"1163\"}],\"sizing_mode\":\"fixed\",\"title\":{\"id\":\"1129\"},\"toolbar\":{\"id\":\"1150\"},\"width\":700,\"x_range\":{\"id\":\"1125\"},\"x_scale\":{\"id\":\"1133\"},\"y_range\":{\"id\":\"1126\"},\"y_scale\":{\"id\":\"1135\"}},\"id\":\"1128\",\"subtype\":\"Figure\",\"type\":\"Plot\"},{\"attributes\":{\"axis\":{\"id\":\"1137\"},\"grid_line_color\":null,\"ticker\":null},\"id\":\"1139\",\"type\":\"Grid\"}],\"root_ids\":[\"1123\"]},\"title\":\"Bokeh Application\",\"version\":\"2.3.3\"}};\n",
              "    var render_items = [{\"docid\":\"8ea16ed5-d124-4a21-9ea8-216c794a7649\",\"root_ids\":[\"1123\"],\"roots\":{\"1123\":\"b4125100-9d4f-474e-ace0-4c3c4bbd4c0d\"}}];\n",
              "    root.Bokeh.embed.embed_items_notebook(docs_json, render_items);\n",
              "  }\n",
              "  if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
              "    embed_document(root);\n",
              "  } else {\n",
              "    var attempts = 0;\n",
              "    var timer = setInterval(function(root) {\n",
              "      if (root.Bokeh !== undefined && root.Bokeh.Panel !== undefined) {\n",
              "        clearInterval(timer);\n",
              "        embed_document(root);\n",
              "      } else if (document.readyState == \"complete\") {\n",
              "        attempts++;\n",
              "        if (attempts > 200) {\n",
              "          clearInterval(timer);\n",
              "          console.log(\"Bokeh: ERROR: Unable to run BokehJS code because BokehJS library is missing\");\n",
              "        }\n",
              "      }\n",
              "    }, 25, root)\n",
              "  }\n",
              "})(window);</script>"
            ]
          },
          "metadata": {
            "application/vnd.holoviews_exec.v0+json": {
              "id": "1123"
            }
          },
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 514
        },
        "id": "p_KV1i3gNI82",
        "outputId": "bc7cfcbb-bcc5-45dd-c1a4-1cf6fb5fc7a9"
      },
      "source": [
        "Sentiment = Tab.drop([\"name\",\"price\",\"percent_change_24h\", \"market_cap\", \"volume_24h\", \"url_shares\",\n",
        "                                 \"volatility\", \"social_volume\", \"tweets\", \"close\", \"time\", \"tweet_sentiment_impact1\", \"average_sentiment\"], axis=1)\n",
        "Sentiment"
      ],
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>symbol</th>\n",
              "      <th>tweet_sentiment1</th>\n",
              "      <th>tweet_sentiment2</th>\n",
              "      <th>tweet_sentiment3</th>\n",
              "      <th>tweet_sentiment4</th>\n",
              "      <th>tweet_sentiment5</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>BTC</td>\n",
              "      <td>585</td>\n",
              "      <td>1217</td>\n",
              "      <td>1308</td>\n",
              "      <td>8036</td>\n",
              "      <td>1198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>ETH</td>\n",
              "      <td>42</td>\n",
              "      <td>324</td>\n",
              "      <td>452</td>\n",
              "      <td>2033</td>\n",
              "      <td>174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>ADA</td>\n",
              "      <td>10</td>\n",
              "      <td>331</td>\n",
              "      <td>117</td>\n",
              "      <td>1365</td>\n",
              "      <td>116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>BNB</td>\n",
              "      <td>6</td>\n",
              "      <td>20</td>\n",
              "      <td>49</td>\n",
              "      <td>300</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>XRP</td>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>204</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>DOGE</td>\n",
              "      <td>15</td>\n",
              "      <td>160</td>\n",
              "      <td>191</td>\n",
              "      <td>1115</td>\n",
              "      <td>182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>SOL</td>\n",
              "      <td>30</td>\n",
              "      <td>69</td>\n",
              "      <td>178</td>\n",
              "      <td>379</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>DOT</td>\n",
              "      <td>5</td>\n",
              "      <td>31</td>\n",
              "      <td>60</td>\n",
              "      <td>182</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>UNI</td>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>52</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>LTC</td>\n",
              "      <td>11</td>\n",
              "      <td>14</td>\n",
              "      <td>13</td>\n",
              "      <td>60</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>LINK</td>\n",
              "      <td>4</td>\n",
              "      <td>84</td>\n",
              "      <td>117</td>\n",
              "      <td>217</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>MATIC</td>\n",
              "      <td>24</td>\n",
              "      <td>112</td>\n",
              "      <td>490</td>\n",
              "      <td>487</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>CAKE</td>\n",
              "      <td>94</td>\n",
              "      <td>187</td>\n",
              "      <td>492</td>\n",
              "      <td>2078</td>\n",
              "      <td>122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>AXS</td>\n",
              "      <td>60</td>\n",
              "      <td>198</td>\n",
              "      <td>1451</td>\n",
              "      <td>899</td>\n",
              "      <td>208</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>SAFEMOON</td>\n",
              "      <td>224</td>\n",
              "      <td>2519</td>\n",
              "      <td>4300</td>\n",
              "      <td>11926</td>\n",
              "      <td>281</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "      symbol tweet_sentiment1  ... tweet_sentiment4 tweet_sentiment5\n",
              "3        BTC              585  ...             8036             1198\n",
              "7        ETH               42  ...             2033              174\n",
              "0        ADA               10  ...             1365              116\n",
              "2        BNB                6  ...              300               10\n",
              "14       XRP                1  ...              204               20\n",
              "5       DOGE               15  ...             1115              182\n",
              "12       SOL               30  ...              379               24\n",
              "6        DOT                5  ...              182               41\n",
              "13       UNI                1  ...               52                2\n",
              "9        LTC               11  ...               60               12\n",
              "8       LINK                4  ...              217               19\n",
              "10     MATIC               24  ...              487               39\n",
              "4       CAKE               94  ...             2078              122\n",
              "1        AXS               60  ...              899              208\n",
              "11  SAFEMOON              224  ...            11926              281\n",
              "\n",
              "[15 rows x 6 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 44
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "SssVxMLHNnmv",
        "outputId": "658f1c1d-163f-491c-e88c-d86198564d88"
      },
      "source": [
        "Sentiment=Sentiment.set_index(\"symbol\")\n",
        "Sentiment"
      ],
      "execution_count": 45,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>tweet_sentiment1</th>\n",
              "      <th>tweet_sentiment2</th>\n",
              "      <th>tweet_sentiment3</th>\n",
              "      <th>tweet_sentiment4</th>\n",
              "      <th>tweet_sentiment5</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>585</td>\n",
              "      <td>1217</td>\n",
              "      <td>1308</td>\n",
              "      <td>8036</td>\n",
              "      <td>1198</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>42</td>\n",
              "      <td>324</td>\n",
              "      <td>452</td>\n",
              "      <td>2033</td>\n",
              "      <td>174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>10</td>\n",
              "      <td>331</td>\n",
              "      <td>117</td>\n",
              "      <td>1365</td>\n",
              "      <td>116</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>6</td>\n",
              "      <td>20</td>\n",
              "      <td>49</td>\n",
              "      <td>300</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>1</td>\n",
              "      <td>12</td>\n",
              "      <td>16</td>\n",
              "      <td>204</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>15</td>\n",
              "      <td>160</td>\n",
              "      <td>191</td>\n",
              "      <td>1115</td>\n",
              "      <td>182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>30</td>\n",
              "      <td>69</td>\n",
              "      <td>178</td>\n",
              "      <td>379</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>5</td>\n",
              "      <td>31</td>\n",
              "      <td>60</td>\n",
              "      <td>182</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>1</td>\n",
              "      <td>8</td>\n",
              "      <td>4</td>\n",
              "      <td>52</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>11</td>\n",
              "      <td>14</td>\n",
              "      <td>13</td>\n",
              "      <td>60</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>4</td>\n",
              "      <td>84</td>\n",
              "      <td>117</td>\n",
              "      <td>217</td>\n",
              "      <td>19</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>24</td>\n",
              "      <td>112</td>\n",
              "      <td>490</td>\n",
              "      <td>487</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>94</td>\n",
              "      <td>187</td>\n",
              "      <td>492</td>\n",
              "      <td>2078</td>\n",
              "      <td>122</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>60</td>\n",
              "      <td>198</td>\n",
              "      <td>1451</td>\n",
              "      <td>899</td>\n",
              "      <td>208</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>224</td>\n",
              "      <td>2519</td>\n",
              "      <td>4300</td>\n",
              "      <td>11926</td>\n",
              "      <td>281</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         tweet_sentiment1 tweet_sentiment2  ... tweet_sentiment4 tweet_sentiment5\n",
              "symbol                                      ...                                  \n",
              "BTC                   585             1217  ...             8036             1198\n",
              "ETH                    42              324  ...             2033              174\n",
              "ADA                    10              331  ...             1365              116\n",
              "BNB                     6               20  ...              300               10\n",
              "XRP                     1               12  ...              204               20\n",
              "DOGE                   15              160  ...             1115              182\n",
              "SOL                    30               69  ...              379               24\n",
              "DOT                     5               31  ...              182               41\n",
              "UNI                     1                8  ...               52                2\n",
              "LTC                    11               14  ...               60               12\n",
              "LINK                    4               84  ...              217               19\n",
              "MATIC                  24              112  ...              487               39\n",
              "CAKE                   94              187  ...             2078              122\n",
              "AXS                    60              198  ...              899              208\n",
              "SAFEMOON              224             2519  ...            11926              281\n",
              "\n",
              "[15 rows x 5 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 45
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "nlAyPa9zNsba",
        "outputId": "9d4b54d9-f5a9-4c4a-f9a4-b13beb68aaf0"
      },
      "source": [
        "Total_Sentiment = Sentiment.sum(axis=1)\n",
        "Total_Sentiment =pd.DataFrame(Total_Sentiment)\n",
        "Total_Sentiment.rename(columns={Total_Sentiment.columns[0] :\"Total Sentiment\"}, inplace=True)\n",
        "Total_Sentiment"
      ],
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Total Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>12344.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>3025.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>1939.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>385.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>253.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>1663.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>680.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>319.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>67.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>110.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>441.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>1152.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>2973.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>2816.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>19250.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Total Sentiment\n",
              "symbol                   \n",
              "BTC               12344.0\n",
              "ETH                3025.0\n",
              "ADA                1939.0\n",
              "BNB                 385.0\n",
              "XRP                 253.0\n",
              "DOGE               1663.0\n",
              "SOL                 680.0\n",
              "DOT                 319.0\n",
              "UNI                  67.0\n",
              "LTC                 110.0\n",
              "LINK                441.0\n",
              "MATIC              1152.0\n",
              "CAKE               2973.0\n",
              "AXS                2816.0\n",
              "SAFEMOON          19250.0"
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "z_gj2_YfNuX1",
        "outputId": "f32eb2a0-d85e-4d93-eb6f-57b4ccc2dea0"
      },
      "source": [
        "Bearish_Sentiment = Sentiment.drop([\"tweet_sentiment3\", \"tweet_sentiment4\", \"tweet_sentiment5\"], axis=1)\n",
        "Bearish_Sentiment_Sum = Bearish_Sentiment.sum(axis=1)\n",
        "Bearish_Sentiment_Sum =pd.DataFrame(Bearish_Sentiment_Sum)\n",
        "Bearish_Sentiment_Sum.rename(columns={Bearish_Sentiment_Sum.columns[0] :\"Bearish Sentiment\"}, inplace=True)\n",
        "Bearish_Sentiment_Sum"
      ],
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Bearish Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>1802.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>366.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>341.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>26.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>13.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>175.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>99.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>36.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>9.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>25.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>88.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>136.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>281.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>258.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>2743.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Bearish Sentiment\n",
              "symbol                     \n",
              "BTC                  1802.0\n",
              "ETH                   366.0\n",
              "ADA                   341.0\n",
              "BNB                    26.0\n",
              "XRP                    13.0\n",
              "DOGE                  175.0\n",
              "SOL                    99.0\n",
              "DOT                    36.0\n",
              "UNI                     9.0\n",
              "LTC                    25.0\n",
              "LINK                   88.0\n",
              "MATIC                 136.0\n",
              "CAKE                  281.0\n",
              "AXS                   258.0\n",
              "SAFEMOON             2743.0"
            ]
          },
          "metadata": {},
          "execution_count": 47
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "l2QYyvcyNwTS",
        "outputId": "dd02b816-b0aa-4899-9de9-72e7129ff905"
      },
      "source": [
        "Bearish_Sentiment_Percent = (Bearish_Sentiment_Sum[\"Bearish Sentiment\"] / Total_Sentiment[\"Total Sentiment\"])*100\n",
        "Bearish_Sentiment_Percent=pd.DataFrame(Bearish_Sentiment_Percent)\n",
        "Bearish_Sentiment_Percent.rename(columns={Bearish_Sentiment_Percent.columns[0] :\"Bearish Percent Sentiment\"}, inplace=True)\n",
        "Bearish_Sentiment_Percent"
      ],
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Bearish Percent Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>14.598185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>12.099174</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>17.586385</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>6.753247</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>5.138340</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>10.523151</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>14.558824</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>11.285266</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>13.432836</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>22.727273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>19.954649</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>11.805556</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>9.451732</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>9.161932</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>14.249351</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Bearish Percent Sentiment\n",
              "symbol                             \n",
              "BTC                       14.598185\n",
              "ETH                       12.099174\n",
              "ADA                       17.586385\n",
              "BNB                        6.753247\n",
              "XRP                        5.138340\n",
              "DOGE                      10.523151\n",
              "SOL                       14.558824\n",
              "DOT                       11.285266\n",
              "UNI                       13.432836\n",
              "LTC                       22.727273\n",
              "LINK                      19.954649\n",
              "MATIC                     11.805556\n",
              "CAKE                       9.451732\n",
              "AXS                        9.161932\n",
              "SAFEMOON                  14.249351"
            ]
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "e90K1IiUNzjp",
        "outputId": "5014e33d-fc95-40d3-ae67-7edcef66f13f"
      },
      "source": [
        "Bullish_Sentiment = Sentiment.drop([\"tweet_sentiment3\", \"tweet_sentiment1\", \"tweet_sentiment2\"], axis=1)\n",
        "Bullish_Sentiment\n",
        "Bullish_Sentiment_Sum = Bullish_Sentiment.sum(axis=1)\n",
        "Bullish_Sentiment_Sum =pd.DataFrame(Bullish_Sentiment_Sum)\n",
        "Bullish_Sentiment_Sum.rename(columns={Bullish_Sentiment_Sum.columns[0] :\"Bullish Sentiment\"}, inplace=True)\n",
        "Bullish_Sentiment_Sum "
      ],
      "execution_count": 49,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Bullish Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>9234.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>2207.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>1481.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>310.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>224.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>1297.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>403.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>223.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>54.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>72.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>236.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>526.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>2200.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>1107.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>12207.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Bullish Sentiment\n",
              "symbol                     \n",
              "BTC                  9234.0\n",
              "ETH                  2207.0\n",
              "ADA                  1481.0\n",
              "BNB                   310.0\n",
              "XRP                   224.0\n",
              "DOGE                 1297.0\n",
              "SOL                   403.0\n",
              "DOT                   223.0\n",
              "UNI                    54.0\n",
              "LTC                    72.0\n",
              "LINK                  236.0\n",
              "MATIC                 526.0\n",
              "CAKE                 2200.0\n",
              "AXS                  1107.0\n",
              "SAFEMOON            12207.0"
            ]
          },
          "metadata": {},
          "execution_count": 49
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "ai1dS6Y0N4R-",
        "outputId": "988d8d72-2b68-48a9-fb59-c02aa22967a1"
      },
      "source": [
        "Bullish_Sentiment_Percent = (Bullish_Sentiment_Sum[\"Bullish Sentiment\"] / Total_Sentiment[\"Total Sentiment\"])*100\n",
        "Bullish_Sentiment_Percent=pd.DataFrame(Bullish_Sentiment_Percent)\n",
        "Bullish_Sentiment_Percent.rename(columns={Bullish_Sentiment_Percent.columns[0] :\"Bullish Percent Sentiment\"}, inplace=True)\n",
        "Bullish_Sentiment_Percent"
      ],
      "execution_count": 50,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Bullish Percent Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>74.805574</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>72.958678</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>76.379577</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>80.519481</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>88.537549</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>77.991581</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>59.264706</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>69.905956</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>80.597015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>65.454545</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>53.514739</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>45.659722</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>73.999327</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>39.311080</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>63.412987</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Bullish Percent Sentiment\n",
              "symbol                             \n",
              "BTC                       74.805574\n",
              "ETH                       72.958678\n",
              "ADA                       76.379577\n",
              "BNB                       80.519481\n",
              "XRP                       88.537549\n",
              "DOGE                      77.991581\n",
              "SOL                       59.264706\n",
              "DOT                       69.905956\n",
              "UNI                       80.597015\n",
              "LTC                       65.454545\n",
              "LINK                      53.514739\n",
              "MATIC                     45.659722\n",
              "CAKE                      73.999327\n",
              "AXS                       39.311080\n",
              "SAFEMOON                  63.412987"
            ]
          },
          "metadata": {},
          "execution_count": 50
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "WTMXdq8UN5v6",
        "outputId": "367e1944-2738-4a40-b7f1-3ef7b53e5530"
      },
      "source": [
        "Neutral_Sentiment = Sentiment.drop([\"tweet_sentiment1\",\"tweet_sentiment2\", \"tweet_sentiment4\", \"tweet_sentiment5\"], axis=1)\n",
        "Neutral_Sentiment =pd.DataFrame(Neutral_Sentiment)\n",
        "Neutral_Sentiment=Neutral_Sentiment.rename(columns={\"tweet_sentiment3\": \"Neutral Sentiment\"})\n",
        "Neutral_Sentiment"
      ],
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Neutral Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>1308</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>452</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>49</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>191</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>178</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>117</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>490</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>492</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>1451</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>4300</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Neutral Sentiment\n",
              "symbol                    \n",
              "BTC                   1308\n",
              "ETH                    452\n",
              "ADA                    117\n",
              "BNB                     49\n",
              "XRP                     16\n",
              "DOGE                   191\n",
              "SOL                    178\n",
              "DOT                     60\n",
              "UNI                      4\n",
              "LTC                     13\n",
              "LINK                   117\n",
              "MATIC                  490\n",
              "CAKE                   492\n",
              "AXS                   1451\n",
              "SAFEMOON              4300"
            ]
          },
          "metadata": {},
          "execution_count": 51
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "3bT9Mrh9N9i2",
        "outputId": "e75072b2-a741-47bf-cce7-bce52423e29c"
      },
      "source": [
        "Neutral_Sentiment_Percent = (Neutral_Sentiment[\"Neutral Sentiment\"] / Total_Sentiment[\"Total Sentiment\"])*100\n",
        "Neutral_Sentiment_Percent=pd.DataFrame(Neutral_Sentiment_Percent)\n",
        "Neutral_Sentiment_Percent.rename(columns={Neutral_Sentiment_Percent.columns[0] :\"Neutral Percent Sentiment\"}, inplace=True)\n",
        "Neutral_Sentiment_Percent"
      ],
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Neutral Percent Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>10.5962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>14.9421</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>6.03404</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>12.7273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>6.32411</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>11.4853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>26.1765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>18.8088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>5.97015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>11.8182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>26.5306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>42.5347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>16.5489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>51.527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>22.3377</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         Neutral Percent Sentiment\n",
              "symbol                            \n",
              "BTC                        10.5962\n",
              "ETH                        14.9421\n",
              "ADA                        6.03404\n",
              "BNB                        12.7273\n",
              "XRP                        6.32411\n",
              "DOGE                       11.4853\n",
              "SOL                        26.1765\n",
              "DOT                        18.8088\n",
              "UNI                        5.97015\n",
              "LTC                        11.8182\n",
              "LINK                       26.5306\n",
              "MATIC                      42.5347\n",
              "CAKE                       16.5489\n",
              "AXS                         51.527\n",
              "SAFEMOON                   22.3377"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 545
        },
        "id": "RDHmqfHTOAx1",
        "outputId": "8e405f53-b178-46ea-cbf0-24243245db2c"
      },
      "source": [
        "Percent_Sentiment = pd.concat([Bearish_Sentiment_Percent, Bullish_Sentiment_Percent, Neutral_Sentiment_Percent], axis=\"columns\")\n",
        "Percent_Sentiment"
      ],
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>Bearish Percent Sentiment</th>\n",
              "      <th>Bullish Percent Sentiment</th>\n",
              "      <th>Neutral Percent Sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>symbol</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>BTC</th>\n",
              "      <td>14.598185</td>\n",
              "      <td>74.805574</td>\n",
              "      <td>10.5962</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ETH</th>\n",
              "      <td>12.099174</td>\n",
              "      <td>72.958678</td>\n",
              "      <td>14.9421</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>ADA</th>\n",
              "      <td>17.586385</td>\n",
              "      <td>76.379577</td>\n",
              "      <td>6.03404</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>BNB</th>\n",
              "      <td>6.753247</td>\n",
              "      <td>80.519481</td>\n",
              "      <td>12.7273</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>XRP</th>\n",
              "      <td>5.138340</td>\n",
              "      <td>88.537549</td>\n",
              "      <td>6.32411</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOGE</th>\n",
              "      <td>10.523151</td>\n",
              "      <td>77.991581</td>\n",
              "      <td>11.4853</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SOL</th>\n",
              "      <td>14.558824</td>\n",
              "      <td>59.264706</td>\n",
              "      <td>26.1765</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>DOT</th>\n",
              "      <td>11.285266</td>\n",
              "      <td>69.905956</td>\n",
              "      <td>18.8088</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>UNI</th>\n",
              "      <td>13.432836</td>\n",
              "      <td>80.597015</td>\n",
              "      <td>5.97015</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LTC</th>\n",
              "      <td>22.727273</td>\n",
              "      <td>65.454545</td>\n",
              "      <td>11.8182</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>LINK</th>\n",
              "      <td>19.954649</td>\n",
              "      <td>53.514739</td>\n",
              "      <td>26.5306</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>MATIC</th>\n",
              "      <td>11.805556</td>\n",
              "      <td>45.659722</td>\n",
              "      <td>42.5347</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>CAKE</th>\n",
              "      <td>9.451732</td>\n",
              "      <td>73.999327</td>\n",
              "      <td>16.5489</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>AXS</th>\n",
              "      <td>9.161932</td>\n",
              "      <td>39.311080</td>\n",
              "      <td>51.527</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>SAFEMOON</th>\n",
              "      <td>14.249351</td>\n",
              "      <td>63.412987</td>\n",
              "      <td>22.3377</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          Bearish Percent Sentiment  ...  Neutral Percent Sentiment\n",
              "symbol                               ...                           \n",
              "BTC                       14.598185  ...                    10.5962\n",
              "ETH                       12.099174  ...                    14.9421\n",
              "ADA                       17.586385  ...                    6.03404\n",
              "BNB                        6.753247  ...                    12.7273\n",
              "XRP                        5.138340  ...                    6.32411\n",
              "DOGE                      10.523151  ...                    11.4853\n",
              "SOL                       14.558824  ...                    26.1765\n",
              "DOT                       11.285266  ...                    18.8088\n",
              "UNI                       13.432836  ...                    5.97015\n",
              "LTC                       22.727273  ...                    11.8182\n",
              "LINK                      19.954649  ...                    26.5306\n",
              "MATIC                     11.805556  ...                    42.5347\n",
              "CAKE                       9.451732  ...                    16.5489\n",
              "AXS                        9.161932  ...                     51.527\n",
              "SAFEMOON                  14.249351  ...                    22.3377\n",
              "\n",
              "[15 rows x 3 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 159
        },
        "id": "9_Xgjz42OCjJ",
        "outputId": "0fec9d64-ffd4-4d05-8e50-e3fd9df2e726"
      },
      "source": [
        "P_Sentiment=Percent_Sentiment.T\n",
        "P_Sentiment"
      ],
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th>symbol</th>\n",
              "      <th>BTC</th>\n",
              "      <th>ETH</th>\n",
              "      <th>ADA</th>\n",
              "      <th>BNB</th>\n",
              "      <th>XRP</th>\n",
              "      <th>DOGE</th>\n",
              "      <th>SOL</th>\n",
              "      <th>DOT</th>\n",
              "      <th>UNI</th>\n",
              "      <th>LTC</th>\n",
              "      <th>LINK</th>\n",
              "      <th>MATIC</th>\n",
              "      <th>CAKE</th>\n",
              "      <th>AXS</th>\n",
              "      <th>SAFEMOON</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>Bearish Percent Sentiment</th>\n",
              "      <td>14.5982</td>\n",
              "      <td>12.0992</td>\n",
              "      <td>17.5864</td>\n",
              "      <td>6.75325</td>\n",
              "      <td>5.13834</td>\n",
              "      <td>10.5232</td>\n",
              "      <td>14.5588</td>\n",
              "      <td>11.2853</td>\n",
              "      <td>13.4328</td>\n",
              "      <td>22.7273</td>\n",
              "      <td>19.9546</td>\n",
              "      <td>11.8056</td>\n",
              "      <td>9.45173</td>\n",
              "      <td>9.16193</td>\n",
              "      <td>14.2494</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Bullish Percent Sentiment</th>\n",
              "      <td>74.8056</td>\n",
              "      <td>72.9587</td>\n",
              "      <td>76.3796</td>\n",
              "      <td>80.5195</td>\n",
              "      <td>88.5375</td>\n",
              "      <td>77.9916</td>\n",
              "      <td>59.2647</td>\n",
              "      <td>69.906</td>\n",
              "      <td>80.597</td>\n",
              "      <td>65.4545</td>\n",
              "      <td>53.5147</td>\n",
              "      <td>45.6597</td>\n",
              "      <td>73.9993</td>\n",
              "      <td>39.3111</td>\n",
              "      <td>63.413</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>Neutral Percent Sentiment</th>\n",
              "      <td>10.5962</td>\n",
              "      <td>14.9421</td>\n",
              "      <td>6.03404</td>\n",
              "      <td>12.7273</td>\n",
              "      <td>6.32411</td>\n",
              "      <td>11.4853</td>\n",
              "      <td>26.1765</td>\n",
              "      <td>18.8088</td>\n",
              "      <td>5.97015</td>\n",
              "      <td>11.8182</td>\n",
              "      <td>26.5306</td>\n",
              "      <td>42.5347</td>\n",
              "      <td>16.5489</td>\n",
              "      <td>51.527</td>\n",
              "      <td>22.3377</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "symbol                         BTC      ETH      ADA  ...     CAKE      AXS SAFEMOON\n",
              "Bearish Percent Sentiment  14.5982  12.0992  17.5864  ...  9.45173  9.16193  14.2494\n",
              "Bullish Percent Sentiment  74.8056  72.9587  76.3796  ...  73.9993  39.3111   63.413\n",
              "Neutral Percent Sentiment  10.5962  14.9421  6.03404  ...  16.5489   51.527  22.3377\n",
              "\n",
              "[3 rows x 15 columns]"
            ]
          },
          "metadata": {},
          "execution_count": 54
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 281
        },
        "id": "od7XvfVgOHwT",
        "outputId": "77208ca6-0f8b-4b75-b609-7fbf0f0239fa"
      },
      "source": [
        "P_Sentiment[\"BTC\"].plot.pie(title=\"Bitcoin\", autopct='%1.1f%%', startangle=180, explode = (0.1, 0.1, 0.1))"
      ],
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7f59726328d0>"
            ]
          },
          "metadata": {},
          "execution_count": 55
        },
        {
          "output_type": "display_data",
          "data": {
            "image/png": "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\n",
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ]
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "Af6O_UmNOM2O"
      },
      "source": [
        "import pandas as pd\n",
        "import dash_core_components as dcc\n",
        "import dash_html_components as html\n",
        "from dash.dependencies import Input, Output\n",
        "import plotly.express as px"
      ],
      "execution_count": 56,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "id": "RSgzPkecOtm5"
      },
      "source": [
        "app = dash.Dash(__name__)"
      ],
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "asMUB2DzO3nr",
        "outputId": "647c445f-7756-45ab-c6a6-adc3d164727a"
      },
      "source": [
        "app.layout = html.Div([\n",
        "                       html.Div([\n",
        "                                 html.Label([\"Crypto Sentiment\"]),\n",
        "                                 dcc.Dropdown(\n",
        "                                     id=\"my_dropdown\",\n",
        "                                     options=[{\"label\": \"Bitcoin\", \"value\": \"BTC\"},\n",
        "                                              {\"label\": \"Ethereum\", \"value\": \"ETH\"}\n",
        "                                              ],\n",
        "                                      value=\"BTC\",\n",
        "                                      multi=False,\n",
        "                                      clearable=False,\n",
        "                                      style={\"width\": \"50%\"}\n",
        "                                 ),\n",
        "                       ]),\n",
        "                       html.Div([\n",
        "                                 dcc.Graph(id=\"the_graph\")\n",
        "                       ]),\n",
        "])\n",
        "@app.callback(\n",
        "    Output(component_id=\"the_graph\", component_property=\"figure\"),\n",
        "    [Input(component_id=\"my_dropdown\", component_property=\"value\")]\n",
        ")\n",
        "def update_graph(my_dropdown):\n",
        "  dff = P_Sentiment\n",
        "\n",
        "  piechart=px.pie(\n",
        "      data_frame=dff,\n",
        "      names=my_dropdown,\n",
        "      hole=.3,\n",
        "  )\n",
        "  return(piechart)\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "  app.run_server(host=\"localhost\", debug=False, port=8050)\n"
      ],
      "execution_count": null,
      "outputs": [
        {
          "output_type": "stream",
          "text": [
            "Dash is running on http://localhost:8050/\n",
            "\n",
            "Dash is running on http://localhost:8050/\n",
            "\n",
            " * Serving Flask app \"__main__\" (lazy loading)\n",
            " * Environment: production\n",
            "\u001b[31m   WARNING: This is a development server. Do not use it in a production deployment.\u001b[0m\n",
            "\u001b[2m   Use a production WSGI server instead.\u001b[0m\n",
            " * Debug mode: off\n"
          ],
          "name": "stdout"
        }
      ]
    }
  ]
}